#!/usr/bin/env bc
define bitnot(a) {
  return 65535 - a
}

define bitand(a, b) {
  result = 0
  mask = 1
  for(bit = 0; bit < 16; bit++) {
    if((a % 2) != 0 && (b % 2) != 0) {
      result = result + mask
    }
    a = a / 2
    b = b / 2
    mask = mask * 2
  }
  return result
}

define bitor(a, b) {
  return bitnot(bitand(bitnot(a), bitnot(b)))
}

define lshift(a, b) {
  return a * (2 ^ b)
}

define rshift(a, b) {
  return a / (2 ^ b)
}
